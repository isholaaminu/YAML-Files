apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dashboard-ingress
  namespace: kubernetes-dashboard
spec:
  rules:
  - host: dashboard.com
    http:
      paths:
      - backend:
          serviceName: kubernetes-dashboard
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
spec:
  selector:
    app: default-http-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# Templating Engine with multiple volumes values
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.name }}
spec:
  container:
  - name: {{ .Values.container.name }}
    image: {{ .Values.conatainer.image }}
    port: {{ .Values.container.port }}
    volumeMounts:
    - mounthPath: "/var/www/html"
      name: mypd
  volumes:
    - name: mypd
      persistentVolumeClaim:
        claimName: pvc-name
    - name: es-secret-dir
      secret:
        secretName: es-secret
    - name: es-config-dir
      configMap:
        name: es-config-map
---
# Values.yaml
name: my-app
conatainer:
  name: my-app-container
  image: my-app-image
  port: 9001
---
# Persistent Volume for Filing System on NFS
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-name
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
       ReadWriteOnce
  persitentVolumenReclaimPolicy: Recycle
  storageClassName: slow
  mountOptions:
    - hard
    - nfsvers=4.0
  nfs:
    path: /dir/path/on/nfs/server
    server: nfs-server-ip-address    
---
# Persistent Volume for Filing System on Google Cloud
apiVersion: v1
kind: PersistentVolume
metadata:
  name: test-volume
  labels:
    failure-domain.beta.kubernetes.io/zone; us-central1-a__us-central-b
spec:
  capacity:
    storage: 500Gi
  accessModes:
       ReadWriteOnce
  gcePersistentDisk: Recycle
    pdName: my-data-disk
    fsType: ext4
---
# Persistent Volume for Filing System on Local Drive (not meeting criteria)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: example-pv
spec:
  capacity:
    storage: 50Gi
  volumeMode: Filesystem
  accessModes:
       ReadWriteOnce
  persitentVolumenReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /mnt/disks/ssd1
  nodeAffinity:
    required:
      nodeSelectorterms:
      - matchExpression:
        - key: kubernetes.io/hostname
          operator: In
          Values:
          - example-node  
---
# Persistent Volume Claim and must be reference in pod in same namespace
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pvc-name
spec:
  storageClassName: manual
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources: 
    requests:
      storage: 10Gi
---
# Storage Class for Multiple PVs
apiVersion: v1
kind: StorageClass
metadata:
  name: storage-class-name
provisioner: kubernetes.io/aws-ebs
parameters: 
  type: io1
  iopsPerGB: "10"
  fsType: ext4
---
# nodePort Service 30000 -32667
apiVersion: v1
kind: Service
metadata:
  name: my-service-nodeport
spec:
  type: nodePort
  Selector:
    app: microservice-one
  ports:
    - protocol: TCP
      targetPort: 3000
      nodePort: 30008
---
# Loadbalancer Service 30000 -32667
apiVersion: v1
kind: Service
metadata:
  name: my-service-nodeport
spec:
  type: LoadBalancer
  Selector:
    app: microservice-one
  ports:
    - protocol: TCP
      targetPort: 3000
      nodePort: 30008

  